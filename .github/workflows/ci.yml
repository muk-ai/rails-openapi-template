name: ci
on:
  pull_request:
    types: [opened, synchronize]

env:
  cache-version: v1

jobs:
  cache_bundle_install:
    # see: https://github.com/actions/virtual-environments
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        ruby-version: ["3.1.1"]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
    - uses: actions/cache@v3
      with:
        path: vendor/bundle
        key: gem-${{ runner.os }}-${{ matrix.ruby-version }}-${{ env.cache-version }}-${{ hashFiles(format('{0}{1}', github.workspace, '/Gemfile.lock')) }}
        restore-keys: gem-${{ runner.os }}-${{ matrix.ruby-version }}-${{ env.cache-version }}-
    - name: bundle config
      run: |
        bundle config --local path vendor/bundle
    - name: bundle install
      run: |
        bundle install --jobs 4 --retry 3
  rubocop:
    needs: cache_bundle_install
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        ruby-version: ["3.1.1"]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
    - uses: actions/cache@v3
      with:
        path: vendor/bundle
        key: gem-${{ runner.os }}-${{ matrix.ruby-version }}-${{ env.cache-version }}-${{ hashFiles(format('{0}{1}', github.workspace, '/Gemfile.lock')) }}
        restore-keys: gem-${{ runner.os }}-${{ matrix.ruby-version }}-${{ env.cache-version }}-
    - name: bundle config
      run: |
        bundle config --local path vendor/bundle
    - name: bundle install
      run: |
        bundle install --jobs 4 --retry 3
    - uses: reviewdog/action-setup@v1
      with:
        reviewdog_version: latest
    - name: run rubocop and reviewdog
      env:
        REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        bundle exec rubocop | reviewdog -reporter=github-pr-review -f=rubocop
